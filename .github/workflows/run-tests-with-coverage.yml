name: Run tests with coverage

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  tests-with-coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [ "8.3", "8.4" ]
    env:
      DB_CONNECTION: pgsql
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      DB_DATABASE: forge
      DB_USERNAME: forge
      DB_PASSWORD: secret

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: forge
          POSTGRES_USER: forge
          POSTGRES_PASSWORD: secret
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: xdebug, pcov
          tools: composer:v2
          env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up PostgreSQL
        run: |
          sudo apt-get update 
          sudo apt-get install -y postgresql-client
          psql --version
      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          for i in {1..30}; do
            if pg_isready -h 127.0.0.1 -p 5432 -U forge -d forge; then
              echo "PostgreSQL is ready"
              exit 0
            fi
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL failed to start"
          exit 1
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Execute unit tests via PHPUnit with coverage
        run: vendor/bin/phpunit --coverage-clover build/logs/clover.xml
      - name: Export coverage report
        if: ${{ matrix.php-version == '8.4' }}
        uses: actions/upload-artifact@v4
        with:
          name: clover.xml
          path: build/logs

  upload-to-coveralls:
    needs: tests-with-coverage
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
          tools: composer:v2
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          name: clover.xml
          path: build/logs
      - name: Upload coverage results to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          composer global require php-coveralls/php-coveralls
          php-coveralls --coverage_clover=build/logs/clover.xml -v --json_path=coveralls-upload.json